@page "/orderForm"
@page "/orderForm/{id:int}"
@inject RestClient RestClient
@inject HttpClient HttpClient

<h3>Pedido Form</h3>

<div>
    <table class="table" border="1">
        <tr>

            <td>
                <EditForm Model="Purchases">
                    <InputText @bind-Value="codeArticle"> </InputText>
                    <DataAnnotationsValidator></DataAnnotationsValidator>
                </EditForm>
            </td>
            <td>
                <EditForm Model="Purchases">
                    <InputText @bind-Value="descriptionArticle"> </InputText>
                    <DataAnnotationsValidator></DataAnnotationsValidator>
                </EditForm>
            </td>
            <td>
            </td>
            <td>
                <EditForm Model="Purchases">
                    <InputText @bind-Value="units"> </InputText>
                    <DataAnnotationsValidator></DataAnnotationsValidator>
                </EditForm>
            </td>
            <td>
                <button class="btn btn-success" @onclick="InsertPurchase">Introducir</button>
            </td>
        </tr>

        <tr>
            <td style="background-color:dodgerblue"><b>Codigo</b></td>
            <td style="background-color:dodgerblue"><b>Nombre</b></td>
            <td style="background-color:dodgerblue"><b>Precio</b></td>
            <td style="background-color:dodgerblue"><b>Unidades</b></td>
            <td style="background-color:dodgerblue"><b>Subtotal</b></td>
        </tr>

        @foreach (var purchase in Purchases)
        {
            <tr>
                <td>@purchase.ArticleNavigation.Code</td>
                <td>@purchase.ArticleNavigation.Description</td>
                <td>@purchase.ArticleNavigation.Price</td>
                <td>@purchase.Units</td>
                <td>@purchase.SubTotal</td>
                <td>
                    <a class="btn btn-success">Editar</a>
                    <a class="btn btn-danger">Eliminar</a>
                </td>

            </tr>
        }
    </table>
</div>

<h3>Total:@total</h3>

@code {
    List<Purchase> Purchases = new List<Purchase>(); //la lista de compras que tendra el pedido
    [Parameter] public int id { get; set; }

    public string codeArticle;
    public string descriptionArticle;
    public string units; //las unidades
    public float total; //el ottal que esta costando la compra

    public async void InsertPurchase() //para introducir una compra
    {
        string getArticlebyCode = string.Format("/api/Articles?code={0}",codeArticle);
        var article = (await HttpClient.GetFromJsonAsync<Response<Article>>(getArticlebyCode)).Content.First(); //obtenemos el articulo mediante su codigo
        if(article != null)
        {
            float subTotal = int.Parse(units) * article.Price;

            var newPurchase = new Purchase
            { ArticleId = article.Id, SubTotal = subTotal, Units = int.Parse(units), OrderId=id, ArticleNavigation=article };//creamos la nueva compra

            var response = await HttpClient.PostAsJsonAsync<Purchase>("/api/Purchases", newPurchase); //mandamos lapeticion para introduicr la compra

            Purchases.Add(newPurchase);
            if (response != null) total += subTotal; await InvokeAsync(StateHasChanged);

            units = codeArticle = ""; //reciniamos los campos

        }
    }

    protected async override Task OnInitializedAsync()
    {
        if(id!=0) //si es que seleccionamos un pedid
        {
            string getPurchasesByOrder = string.Format("/api/Purchases?idOrder={0}", id);
            Purchases = (await HttpClient.GetFromJsonAsync<Response<Purchase>>(getPurchasesByOrder) ).Content;
            //obtenemos la lista de compras de una orden especifica


            if (Purchases != null) await InvokeAsync(StateHasChanged);
            foreach(var purchase in Purchases) { total += purchase.SubTotal; } //para sumar cuando dio el total
        }
    }

}
